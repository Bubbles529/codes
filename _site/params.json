{"name":"Pkm","tagline":"PKM","body":"#### 说明\r\n---\r\n本wiki用于个人的知识管理，在个人的成长中，也看过不少书籍，也做过不少笔记（都是在纸质笔记本上）。纸质笔记本上最大的麻烦就是记过即忘，不易回顾与修改。因此建立本wiki用于记录个人的读书笔记、思考、总结等！\r\n\r\n#### 目标\r\n---\r\n作为一个程序猿，不停学习是唯一进步的方法，过硬的技术则是立足之本，同时还需要具有广阔的思维、严密的逻辑思考能力。重点对于能力来讲有如下部分：\r\n\r\n- [计算机基础](计算机基础)\r\n\r\n    了解计算机理论基础（如操作系统、网络等），了解常见的数据结构以及算法，能快速地完成常见算法题目。\r\n\r\n- [编程语言](编程语言)\r\n\r\n    对于程序员来说，编程是其最基础的技能，编程的好坏也取决于对程序语言的理解和熟练程度。熟悉C/C++、Python编程语言，熟悉其标准库，了解该语言的适用场景以及其常见的编程惯用法和编程陷阱。\r\n\r\n- [机器学习](机器学习)\r\n\r\n    深入理解常见的机器学习算法（分类、回归、聚类、关联规则、推荐），熟悉使用常见机器学习框架库，会基于Spark平台进行大数据分析。\r\n\r\n- [软件工程](软件工程)\r\n    \r\n    熟悉常见的软件开发流程、需求分析、持续集成等，知道如何写出可读、可维护、可靠、可测试代码，熟练使用单元测试以及设计模式等知识。\r\n\r\n- [经济管理](经济管理)\r\n\r\n    对于任意一个社会学意义上的人来说，掌握一些基本的经济管理知识是必须以及非常有用的。\r\n\r\n- [产品设计](产品设计)\r\n\r\n    互联网的发展导致产品经理的职位大放光彩，对于一个程序员来说，掌握简单的产品设计知识，更有利于在工作中的沟通和发展。\r\n\r\n- [其他](其他)\r\n\r\n    其他杂记等。\r\n\r\n---\r\n代码Github ：https://github.com/spiritwiki/codes\r\n\r\n\r\n### 机器学习理论\r\n\r\n> 主要记录机器学习相关数学基础，各种算法等相关的读书笔记与总结\r\n\r\n---\r\n##### 数学基础\r\n- 概率基础: [加法原理、乘法原理、抽样、事件、条件概率、随机变量、离散分布、连续分布、联合分布、期望、方差、协方差、相关系数、Chebyshev不等式、中心极限定理、矩](https://www.zybuluo.com/spiritnotes/note/305690)\r\n- 基础概念：[均值、方差、协方差](https://www.zybuluo.com/spiritnotes/note/297176)、\r\n- 基础方法：[最小二乘法](https://www.zybuluo.com/spiritnotes/note/296709)、\r\n- 基础公式：[欧几里得公式、皮尔逊相关系数、Tanimoto系数、基尼不纯度、熵](https://www.zybuluo.com/spiritnotes/note/288072)、\r\n\r\n---\r\n##### 学习总结\r\n- [机器学习算法脑图](http://naotu.baidu.com/file/cd34e99e721323e7a11fcdb74752d8d9?token=e51cdc0804233731.km)\r\n- [KNN(K-最近邻)算法总结以及Python实现](https://www.zybuluo.com/spiritnotes/note/301700)\r\n- [SVM算法总结以及Python实现](https://www.zybuluo.com/spiritnotes/note/309722)\r\n- [ID3决策树算法以及Python实现](https://www.zybuluo.com/spiritnotes/note/302247)\r\n- [朴素贝叶斯算法总结以及Python实现](https://www.zybuluo.com/spiritnotes/note/288802)\r\n- [CART分类回归树算法以及Python实现](https://www.zybuluo.com/spiritnotes/note/301571)\r\n- [K-Means聚类算法以及Python实现](https://www.zybuluo.com/spiritnotes/note/300771)\r\n- [Apriori算法概要以及Python实现](https://www.zybuluo.com/spiritnotes/note/298595)\r\n- [FP-growth算法概要以及Python实现](https://www.zybuluo.com/spiritnotes/note/299261)\r\n\r\n---\r\n##### 数据集实践\r\n- [机器学习实践 -- Digits数据集](https://www.zybuluo.com/spiritnotes/note/293052)\r\n- [机器学习实践 -- Breast Cancer数据集](https://www.zybuluo.com/spiritnotes/note/295894)\r\n- [机器学习实践 -- Iris数据集](https://www.zybuluo.com/spiritnotes/note/295134)\r\n- [机器学习实践 -- Seeds数据集](https://www.zybuluo.com/spiritnotes/note/295966)\r\n\r\n---\r\n##### 读书笔记\r\n- [《集体智慧编程》](https://www.zybuluo.com/spiritnotes/note/286386)\r\n  以Python语言为基础介绍了协同过滤、k-近邻、支持向量机、朴素贝叶斯、决策树等算法。\r\n- [《机器学习系统设计》](https://www.zybuluo.com/spiritnotes/note/279606)（Building Machine Learning Systems With Python）\r\n  以Python以及Scikit-learn库来介绍部分机器学习应用。\r\n- [《机器学习实战》](https://www.zybuluo.com/spiritnotes/note/281852)（Peter Harrington，Machine Learning in Action）\r\n  主要介绍重要的机器学习算法，用Python实现并进行实例运行。主要包含：k-近邻、决策树、朴素贝叶斯、逻辑回归、SVM、AdaBoost、k-均值聚类、Apriori以及FP-Growth算法。\r\n- [《模式识别与机器学习》](https://www.zybuluo.com/spiritnotes/note/289091)（Pattern Recognition And Machine Learning）\r\n  机器学习领域内的介绍性课本，介绍了大多数算法的本质。\r\n- []()（K.Murphy，Machine Learning: A Probabilistic Perspective）\r\n  介绍了ML的前沿知识，几乎覆盖了机器学习方方面面的知识。\r\n- [《统计学习方法》](https://www.zybuluo.com/spiritnotes/note/288807)(李航)\r\n  介绍了感知机、k-近邻、朴素贝叶斯、决策树、逻辑回归、支持向量机、AdaBoost、EM、隐马尔科夫模型以及条件随机场。\r\n- [《大数据：互联网大规模数据挖掘与分布式处理》](https://www.zybuluo.com/spiritnotes/note/291834)（Anand Rajaraman/Jeffrey David Ullman）\r\n  主要介绍了如下内容： 分布式文件系统以及map-reduce工具；相似性搜索；数据流处理；搜索引擎技术；频繁项集挖掘；聚类算法；广告管理以及推荐系统\r\n- [《统计思维：程序员数学之概率统计》](https://www.zybuluo.com/spiritnotes/note/303313)\r\n\r\n---\r\n##### 论文博客学习\r\n\r\n- [Netflixprize获奖论文](https://www.zybuluo.com/spiritnotes/note/297468)\r\n- [机器传送门文章读书笔记](https://www.zybuluo.com/spiritnotes/note/292949)\r\n\r\n--- \r\n##### 公开课学习\r\n\r\n- [加州理工：机器学习与数据挖掘](https://www.zybuluo.com/spiritnotes/note/293284)\r\n- [Coursera: Machine Learning](https://www.zybuluo.com/spiritnotes/note/294052)\r\n\r\n---\r\n### Scikit-Learn学习\r\n\r\n> 主要记录Scikit-Learn的教程与使用总结\r\n\r\n---\r\n##### 博文学习\r\n\r\n- [scikit-learn-intro](https://www.zybuluo.com/spiritnotes/note/295369)\r\n- [An example machine learning notebook](https://www.zybuluo.com/spiritnotes/note/295413)\r\n   以IRIS数据为例， 一步一步讲解了如何对数据进行分析、可视化、检查以及Machine Learning。\r\n- [PyCon 2015 Scikit-learn Tutorial by Jake VanderPlas](https://www.zybuluo.com/spiritnotes/note/303520)\r\n\r\n\r\n### Spark\r\n\r\n> 主要记录Spark相关的学习总结以及读书笔记\r\n\r\n---\r\n##### 读书笔记\r\n\r\n- [《Spark机器学习》](https://www.zybuluo.com/spiritnotes/note/292430)（Nick Pentreath，Machine Learning with Spark）  \r\n\r\n  主要介绍如何借助Spark、Mlib以及其他常见的免费机器学习和数据分析套件来创建一个有用的机器学习系统。\r\n\r\n- [《Spark快速大数据分析》](https://www.zybuluo.com/spiritnotes/note/309136)（Holden Karau...，Learning Spark：Lightning-fast Data Analysis）\r\n\r\n  主要介绍Spark的基础知识、Spark Shell、Spark API、Spark集群应用以及Spark提供的更高层的程序库支持（SQL、MLlib）。\r\n\r\n- [《Spark高级数据分析》](https://www.zybuluo.com/spiritnotes/note/289711)（Sandy Ryza...，Advanced Analytics with Spark）\r\n\r\n  主要介绍Spark及其生态系统，详细介绍了将分类、协同过滤以及异常检查等常用技术应用于基因学、安全和金融领域的若干模式。\r\n\r\n---\r\n##### 学习总结\r\n\r\n\r\n### 相关资源\r\n\r\n> 主要记录机器学习相关的网络资源\r\n\r\n---\r\n##### 数据集资源\r\n\r\n- UCI机器学习知识库：300个数据集，http://archive.ics.uci.edu/ml\r\n- Amazon AWS公开数据集：包含人类基因组项目、Common Crawl网页语料库、维基百科、google book Ngrams。http://aws.amazon.com/publicdatasets/\r\n- Kaggle：集合了Kaggle举行的各类机器学习竞赛所用的数据集，覆盖分类、回归、排名、推荐系统以及图像分析领域。http://www.kaggle.com/competitions\r\n- KDnuggets:详细的公开数据集列表。http://www.kdnuggets.com/datasets/index.html\r\n- Infochimps数据集：部分数据集需要购买。http://www.infochimps.com/\r\n- 频繁集挖掘数据资源：http://fimi.ua.ac.be/data/\r\n\r\n---\r\n##### 网站资源\r\n\r\n- 机器学习问答网站 http://metaoptimize.com/qa\r\n- 统计方面问答网站 http://stats.stackexchange.com\r\n- Kaggle的博客 http://blog.kaggle.com\r\n              http://www.kaggle.com\r\n\r\n---\r\n##### 库和框架\r\n\r\n- [各语言机器学习框架和库列表](https://github.com/josephmisiti/awesome-machine-learni)\r\n\r\n---\r\n##### 深度学习框架\r\n- ImageNet\r\n- DIGITS\r\n- Caffe\r\n- Theano\r\n- Torch\r\n- cuDNN\r\n\r\n  CNTK  microsoft\r\n  Theano \r\n  TensorFlow google\r\n  Torch 7\r\n  Caffe\r\n\r\n### C/C++\r\n\r\n> C是典型的面向过程语言，而C++是多泛型编程语言，两者在系统编程等领域使用非常广泛\r\n\r\n---\r\n### Python\r\n\r\n> Python是一种面向对象、解释型计算机程序设计语言，由Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。Python语法简洁清晰，特色之一是强制用空白符(white space)作为语句缩进。Python具有丰富和强大的库。它常被昵称为胶水语言，能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起。\r\n\r\n---\r\n##### Python语言知识\r\n\r\n- [Python语言实践分析 -- import](https://www.zybuluo.com/spiritnotes/note/278792)\r\n- [Python语言实践分析 -- super函数](https://www.zybuluo.com/spiritnotes/note/278830)\r\n- [Python语言实践分析 -- reload流程](https://www.zybuluo.com/spiritnotes/note/279318)\r\n- [Python语言实践分析 -- 包导入](https://www.zybuluo.com/spiritnotes/note/279492)\r\n- [Python语言实践分析 -- 默认参数](https://www.zybuluo.com/spiritnotes/note/280090)\r\n- [Python语言实践分析 -- With语句](https://www.zybuluo.com/spiritnotes/note/280067)\r\n- [Python语言实践分析 -- 闭包](https://www.zybuluo.com/spiritnotes/note/288614)\r\n\r\n---\r\n##### Python标准库及外部库\r\n- [Python标准库学习 -- logging](https://www.zybuluo.com/spiritnotes/note/305251)\r\n- [Python标准库学习 -- collections.Counter](https://www.zybuluo.com/spiritnotes/note/305482)\r\n\r\n\r\n- [Matplotlib Tutorial -- 学习笔记](https://www.zybuluo.com/spiritnotes/note/306235)\r\n\r\n\r\n- [jieba](wiki/python/jieba.md \"jieba\") : 中文分词库\r\n- [snowballstemmer]()\r\n- [sh]():允许你将shell命令作为函数导入到Python\r\n- [fuzzywuzzy]():模糊字符串匹配库，可以实现如字符串比较比率、令牌比率，以及许多其他匹配指标等工作，对于创造特征向量 （feature vectors）或匹配不同数据库中的记录特别有用\r\n\r\n---\r\n##### 编程规范及惯用法\r\n- [动态获取函数名字](https://www.zybuluo.com/spiritnotes/note/306113)\r\n\r\n---\r\n##### 读书笔记\r\n- [《编写高质量代码 - 改善Python程序的91个建议》](https://www.zybuluo.com/spiritnotes/note/278856)\r\n- [《Python Cookbook》](https://www.zybuluo.com/spiritnotes/note/294128)：包含了Python语言核心以及多个应用领域中的常见任务。\r\n\r\n---\r\n##### 论文博客阅读\r\n\r\n- [好东西传送门推送文章](https://www.zybuluo.com/spiritnotes/note/292956)\r\n- [Python进阶必读汇总](http://dongweiming.github.io/blog/archives/pythonjin-jie-bi-du-hui-zong/?utm_source=tuicool&utm_medium=referral)\r\n\r\n---\r\n##### 网络资源\r\n－ [Matplotlib Gallery](http://matplotlib.org/gallery.html)提供一些图像例子\r\n\r\n##### 读书笔记\r\n\r\n- [《代码之髓》](https://www.zybuluo.com/spiritnotes/note/280521)：编程语言特性方面的小册子，很少细节，科普性质。\r\n\r\n---\r\n##### 博文阅读笔记\r\n###### 并发\r\n- [Concurrency by 陈天](https://www.zybuluo.com/spiritnotes/note/292609)\r\n- [并发之痛 Thread，Goroutine，Actor by 王渊命](https://www.zybuluo.com/spiritnotes/note/300562)\r\n\r\n---\r\n##### 算法\r\n- [冒泡排序](https://www.zybuluo.com/spiritnotes/note/285555)\r\n- [快速排序](https://www.zybuluo.com/spiritnotes/note/285493)\r\n\r\n---\r\n##### 编程题\r\n\r\n- [约瑟夫环问题](https://www.zybuluo.com/spiritnotes/note/279264)\r\n- [数排列组合成最大值](https://www.zybuluo.com/spiritnotes/note/279279)\r\n- [编程之美中CPU使用曲线题目](https://www.zybuluo.com/spiritnotes/note/303276)\r\n- [两点间的最短距离]()\r\n  - 距离权重为1和非1\r\n  - 必须按照次序经过一些中间点\r\n  - 不需要按照次序经过中间点\r\n  - 经过中间点时是否可以重复\r\n- [1...9中填入符号，形成特定的和]()\r\n\r\n### 代码编写\r\n\r\n> 记录代码编写的一些方法以及常见模式等。\r\n\r\n---\r\n##### 读书笔记\r\n\r\n[《编写可读代码的艺术》](https://www.zybuluo.com/spiritnotes/note/278743)\r\n- 主题：代码写法使其被理解的所需时间最小化\r\n- 命名：名字具体/清晰/准确\r\n- 风格：一致化\r\n- 组织：控制流处理自然，少逻辑嵌套，一次只做一件事\r\n- 测试：测试用例必须易读易写易添加\r\n\r\n[《测试驱动开发》](https://www.zybuluo.com/spiritnotes/note/284860)\r\n- 通过清单列出需要实现的功能以及对应的用例，实现过程中添加新功能/重构要点/设计缺陷等，实现后删除\r\n- 写出待实现的测试用例，然后通过伪代码/显明实现/三角法使测试用例通过，流程为不可运行/可运行/重构\r\n- 通过覆盖率/缺陷插入等方法判断测试的效果\r\n\r\n\r\n### 工具\r\n\r\n> 主要记录软件工程中常用工具等。\r\n\r\n---\r\n\r\n##### 知识总结\r\n\r\n- [SSH原理](https://www.zybuluo.com/spiritnotes/note/281385)\r\n- [Git常用命令记录](https://www.zybuluo.com/spiritnotes/note/281989)\r\n- [Github简单配置](https://www.zybuluo.com/spiritnotes/note/281370)\r\n\r\n---\r\n###### 读书笔记\r\n\r\n- [《Git版本控制管理》]()\r\n\r\n### Welcome to GitHub Pages.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here [using GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/), select a template crafted by a designer, and publish. After your page is generated, you can check out the new `gh-pages` branch locally. If you’re using GitHub Desktop, simply sync your repository and you’ll see the new branch.\r\n\r\n### Designer Templates\r\nWe’ve crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}